"""
Статистика вызовов

Написать, держитесь крепче (!), генератор-декоратор statcounter(),
который конструирует объекты (назовём один из них stat) со следующим поведением.
Первый вызов next(stat) (он же stat.send(None)) возвращает словарь,
в котором stat будет хранить информацию вида функция:
количество вызовов, где функция — это исходный (не обёрнутый) объект-функция (да, так тоже можно!).
Словарь заполняется в порядке вызовов соответствующих декораторов.
Все последующие вызовы stat.send(function) оборачивают вызов произвольной функции
function увеличением на 1 соответствующего элемента словаря.
Глобальными именами пользоваться нельзя.
"""


def statcounter():
    d = {}
    snt = yield d
    while 1:
        def newfun(fun):
            d[fun] = 0

            def count(*args):
                d[fun] += 1
                return fun(*args)
            return count
        snt = yield newfun(snt)
